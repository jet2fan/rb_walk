4770fc0 姿勢補間完了。次回、腕を延ばし足の動きを確認する。
1bc7494 Gazebo出力をmainからClassに整理。次回、補間補間関数から姿勢補間をclassを使って出力
8724c22 補間計算完了。どのようにして、Gazeboに送信するか、検討。次回：Rosメッセージ出力
a4a3590 左右の鼠径部Y軸のエラー解消。理由は、鼠径部と踝の入れ替え。次回：歩行姿勢への移行 歩行姿勢への移行：とにかく直接的に行う。 余分なことは、一切行わず、それだけをやる。全ての動作は、その前の動作がある。 必ず、移行は発生する。
cb6e8f0 踝Y軸について、問題を修正。次回：左鼠径部Y軸の修正を行う。
938055b 現在のlanchファイルを修正して、rvizでロボットの運動を確認できるようにした。何かおかしい。 運動の途中で、非連続性が発生している。何がおかしいのか。調査。
fb07b85 urdfの左股関節と踝のY肉について、不要なマイナスを削除。伴いcppを修正。次回：直立から歩行始めの姿勢変更
53c7df9 腕を短くした。歩行開始のプログラムを起動うると、転倒。転倒防止の前に。運動データの確認 運動データの軸回転方向の確認を行う。本来あるべき方向と違うと思われるのは、左鼠径部Yと左踝Yである。 両軸ともにマイナスが付加されているが、本来は必要ない。 このマイナスを外すために、データの見直しを行う。
6165250 左足の動きは、修正完了。次回：腕を短くして、実際の歩行を行う。rvizは取り敢えず断念。 結果として、rvizの動きとgazeboの動きは、一致した。
1015ac8 Gazeboにおける歩行運動がつながった。しかし左足の動きがおかしい。次回：rvizで運動を確認する。 しかしながら、cpp_walkパッケージの方法では、下半身のモデルが正しく表示されない。 なので、ri4で行っているrvizの表示方法を解析し、運動に反映することを目指す。
b30dc42 cpp_walkを修正を始める。
cd0eb42 全モータ制御完了。次回はいよいよcpp_walkを組込む。 結局、cppとyamlをつなぐ手続きは、launchファイルにあった。 どのような、方法でcpp_walkに組み込んでいくか、検討する必要がある。
9d0f35a 左右の股関節が違うところを修正。次回：制御をいじって見る。
4aecb64 足の動きを見るためのモデル完成。次回：左右の股関節y軸の設定を比較し、統一。 左は振り子、右は固定。右は制御できている。左は制御無し。確認を行う。
5aa2734 腕の設置OK。関節は全てfix。次回：足の運動が観察可能な腕に形状変更。
9ac95b3 モータ番号の整理、モデルに色をつけるが完了。次回、制御を行う。
8b08e1a インデント修正OK。次回、駆動部の整理。
5fe6955 不要なコメントを削除。次回、インデントの修正。
1b94ce0 腕以外のモデル完成。シミュレーションは、これでやっていく。次回：コードの整理
06e1621 Link名の変更完了。次回、Jointm名の変更。
86ed81c 左鼠径部完了。ri4の構成要素使い切る。次回：名称整理。
df8ab1d 右踝下完了。次回、左鼠径部。方針：取り敢えずurdfの形状優先。運動はcppのとき追記。
086d68d 右踝完了。次回、踝下。
85df6c2 スネ完了。次回、踝。問題：膝関節がcpp指定通り動いていない。問題持ち越し。
aa13ac0 太腿完成。次回、スネ。
2e2e76d 鼠径部完了。次回、太もも
c46ec93 胴体の変更完了。シミュいレーションの不具合も解消。Gazeboは日本語NG。次回：鼠径部を追記。
d81b853 ri4のモデルに胴体の表示を成功させた。次回は、右鼠径部の表示である。
1f52623 作動確認が取れている。先ずは、urdfを修正していく。
